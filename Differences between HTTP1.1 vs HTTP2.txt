$$Differences between HTTP1.1 vs HTTP2

# HTTP:
a. HTTP stands for hypertext transfer protocol, and it is the basis for almost all web applications. More specifically, HTTP is the method computers and servers use to request and send information. 
b. For instance, when someone navigates to GOOGLE.COM on their laptop, their web browser sends an HTTP request to the GOOGLE servers for the content that appears on the page. Then, GOOGLE servers send HTTP responses with the text, images, and formatting that the browser displays to the user.

1.The first usable version of HTTP was created in 1997. Because it went through several stages of development, this first version of HTTP was called HTTP/1.1. This version is still in use on the web.
2. In 2015, a new version of HTTP called HTTP/2 was created.
3. HTTP/2 solves several problems that the creators of HTTP/1.1 did not anticipate. In particular, HTTP/2 is much faster and more efficient than HTTP/1.1.
4. One of the ways in which HTTP/2 is faster is in how it prioritizes content during the loading process.

# Diferences:
A. Multiplexing:
1. HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it.
2. In contrast, HTTP/2 is able to use a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource.
3.  HTTP/2 does this by splitting data into binary-code messages and numbering these messages so that the client knows which stream each binary message belongs to. 
B. Server push:
1. Typically, a server only serves content to a client device if the client asks for it. However, this approach is not always practical for modern webpages, which often involve several dozen separate resources that the client must request.
2. HTTP/2 solves this problem by allowing a server to "push" content to a client before the client asks for it.
C. Header compression:
1. Small files load more quickly than large ones. To speed up web performance, both HTTP/1.1 and HTTP/2 compress HTTP messages to make them smaller.
2. However, HTTP/2 uses a more advanced compression method called HPACK that eliminates redundant information in HTTP header packets.
3. This eliminates a few bytes from every HTTP packet. Given the volume of HTTP packets involved in loading even a single webpage, those bytes add up quickly, resulting in faster loading. 

# Does prioritization in HTTP2 Affect performance?
1. In HTTP/2, developers have hands-on, detailed control over prioritization. This allows them to maximize perceived and actual page load speed to a degree that was not possible in HTTP/1.1.
2. HTTP/2 offers a feature called weighted prioritization. This allows developers to decide which page resources will load first, every time.
3. In HTTP/2, when a client makes a request for a webpage, the server sends several streams of data to the client at once, instead of sending one thing after another. This method of data delivery is known as multiplexing.
4. Developers can assign each of these data streams a different weighted value, and the value tells the client which data stream to render first.




 